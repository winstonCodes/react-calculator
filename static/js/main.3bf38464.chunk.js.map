{"version":3,"sources":["CalculatorInput.js","CalculatorDisplay.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["CalculatorInput","props","_this","Object","_Users_winstonsmith_Desktop_coding_react_learning_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_winstonsmith_Desktop_coding_react_learning_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_winstonsmith_Desktop_coding_react_learning_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","inputMath","handleSubmit","bind","_Users_winstonsmith_Desktop_coding_react_learning_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleInput","handleButtonInput","handleClear","e","preventDefault","onSave","result","eval","setState","console","log","target","value","input","match","innerHTML","newInput","onClear","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onSubmit","style","display","name","onChange","onClick","Component","CalculatorDisplay","react_default","Calculator","classCallCheck","possibleConstructorReturn","getPrototypeOf","assertThisInitialized","output","src_CalculatorDisplay_0","App","src_Calculator_0","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bf38464.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CalculatorInput.css';\n\nclass CalculatorInput extends Component {\n  constructor(props){ // props: onSave(), onClear\n    super(props)\n    this.state = {\n      inputMath: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleButtonInput = this.handleButtonInput.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    const {onSave} = this.props;\n    let result = 0;\n    try {\n      result = eval(this.state.inputMath);\n\n    } catch (e) {\n      result = 0;\n    }\n    onSave(result);\n    this.setState({inputMath:''})\n  }\n\n  handleInput(e){\n    console.log(e.target.value);\n    let rawInput = e.target.value;\n    // console.log(rawInput);\n    let input = rawInput.match(/^-?\\d+\\.?\\d+[-+*\\/]-?\\d+\\.?\\d+$/g);\n    this.setState({inputMath: input})\n\n  }\n\n  handleButtonInput(e){\n    let input = e.target.innerHTML;\n    let newInput = this.state.inputMath + input\n    this.setState({inputMath: newInput})\n  }\n\n  handleClear(e){\n    const {onClear} = this.props;\n    if(!this.state.inputMath){\n      onClear()\n    } else {\n      this.setState({inputMath: \"\"})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"calculator-form-container\">\n        <form onSubmit={this.handleSubmit} style={{display:\"none\"}}>\n          <input\n            name=\"inputMath\"\n            value={this.state.inputMath}\n            onChange={this.handleInput} />\n          <button>Calculate</button>\n        </form>\n        <div className=\"calc-input-view\">\n          <p>{this.state.inputMath}</p>\n        </div>\n        <div className=\"calculator-button-container\">\n          <table className=\"table table-borderless\">\n            <tbody>\n              <tr>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>+</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>-</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>*</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>/</button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>0</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>1</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>2</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>3</button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>4</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>5</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>6</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>7</button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>8</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleButtonInput}>9</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleClear}>c</button>\n                </td>\n                <td>\n                  <button className=\"calc btn btn-dark\" onClick={this.handleSubmit}>=</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CalculatorInput;\n","import React, { Component } from 'react';\nimport './CalculatorDisplay.css';\n\n// props: result\nconst CalculatorDisplay = props => (\n  <h1>{props.result}</h1>\n)\n\nexport default CalculatorDisplay;\n","import React, { Component } from 'react';\nimport CalculatorDisplay from './CalculatorDisplay';\nimport CalculatorInput from './CalculatorInput';\nimport './Calculator.scss';\n\nclass Calculator extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      result: '0',\n    };\n    this.onSave = this.onSave.bind(this);\n    this.onClear = this.onClear.bind(this);\n  }\n\n\n  onSave(output){\n    this.setState({result: output})\n  }\n\n  onClear(){\n    this.setState({result: '0'})\n  }\n\n  render() {\n    return (\n      <div className=\"calculator\">\n\n        <CalculatorDisplay result={this.state.result} />\n        <CalculatorInput onSave={this.onSave} onClear={this.onClear} />\n\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport Calculator from './Calculator.js'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}